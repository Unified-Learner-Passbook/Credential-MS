generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum VCStatus {
  PENDING
  ISSUED
  REVOKED
}

model VC {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  type              String
  subject           String
  issuer            String
  status            VCStatus  @default(PENDING)
  credential_schema String
  unsigned          Json
  signed            Json?
  created_at        DateTime  @default(now())
  updated_at        DateTime? @default(now())

  @@unique([subject, issuer])
}

model VCV2 {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  type            String[]
  issuer          String
  issuanceDate    String
  expirationDate  String
  // subject         Json (as per the VC doc this is JSON)
  subject         String
  status          VCStatus       @default(PENDING)
  created_at      DateTime       @default(now())
  updated_at      DateTime?      @default(now())
  Presentations   Presentations? @relation(fields: [presentationsId], references: [id])
  presentationsId String?        @db.ObjectId

  @@unique([subject, issuer])
}

model Presentations {
  id                   String    @id @default(auto()) @map("_id") @db.ObjectId
  type                 String[]
  holder               Json
  verifiableCredential VCV2[]
  proof                Json?
  status               VCStatus  @default(PENDING)
  created_at           DateTime  @default(now())
  updated_at           DateTime? @default(now())
}

model Template {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  schema   String
  template String
  type     String
}